#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

#
# Return the next available index for all rules inside the fwrules database
#

use strict;
use warnings;
use esmith::ConfigDB;
use List::Util qw[max];

my $db = esmith::ConfigDB->open('fwrules');
my $sdb = esmith::ConfigDB->open('separators');

my $max_id1 = 0;
foreach ($db->get_all_by_prop('type' => 'rule')) {
    $max_id1 = max($max_id1, $_->key);
}
$max_id1++;

# verifiy in the separator db if an index is not superior or equal
my $max_id2 = 0;
foreach ($sdb->get_all_by_prop('type' => 'separator')) {
    $max_id2 = max($max_id2, $_->key);
}
$max_id2++;

if ($max_id2 >= $max_id1) {
    print $max_id2;
} else {
    print $max_id1;
}
