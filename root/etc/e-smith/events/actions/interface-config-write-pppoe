#!/usr/bin/perl

#
# Copyright (C) 2015 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

#
# Add pppoe options to ifcfg-ppp0 file.
# Delete ifcfg-ppp0 file if pppoe/xdsl interface is disabled.
#

use esmith::ConfigDB;
use esmith::NetworksDB;
use strict;

our $output_dir = $output_dir || $ENV{ESMITH_NETWORK_OUT_DIR} || "/etc/sysconfig/network-scripts";
my $ndb = esmith::NetworksDB->open_ro() || die("Could not open networks DB");

my $eth = $ndb->get_by_role('pppoe');
my @reds = $ndb->red();

my %defaults = (qw(
    bootproto dialup
    clampmss 1412
    connect_poll 6
    connect_timeout 0
    defroute yes
    demand no
    device ppp0
    firewall NONE
    lcp_failure 3
    lcp_interval 20
    name dslprovider
    onboot yes
    peerdns no
    pidfile /var/run/pppoe-adsl.pid
    ping .
    pppoe_timeout 80
    synchronous no
));

# Configure pppd plugin for high-speed PPPoE connections
$defaults{'plugin'} =  glob("/usr/lib64/pppd/*/rp-pppoe.so");

my $file = "$output_dir/ifcfg-ppp0";
my %props = $ndb->get('ppp0') ? $ndb->get('ppp0')->props : ();
my %attrs = (%defaults, %props,
             'type' => 'xDSL',
             'eth' => (defined $eth ? $eth->key : '')
             );

delete $attrs{'role'};
delete $attrs{'Password'};
delete $attrs{'AuthType'};

if (scalar(@reds) > 1) {
    $attrs{'defroute'} = "no";
}

if( $attrs{'eth'} ) {
    open (FH, '>', $file) || die("Could not open $file for writing: $!\n");
    while ( (my $k, my $v) = each %attrs ) {
        $v =~ s/'/'\\''/g;
        print FH uc($k) . "='$v'\n";
    }
    close (FH);
} else {
    unlink $file;
}

exit 0;
