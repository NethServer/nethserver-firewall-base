#!/usr/bin/perl

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use warnings;
use strict;
use esmith::NetworksDB;
use esmith::ConfigDB;

my $ndb = esmith::NetworksDB->open();
my $rdb = esmith::ConfigDB->open('fwrules');

if (grep(/^--skip-network$/, @ARGV)) {

    # Delete all red providers
    foreach my $item ($ndb->get_all_by_prop('type'=>'provider')) {
        $item->delete();
    }

    # Delete dangling zones
    foreach my $item ($ndb->get_all_by_prop('type'=>'zone')) {
        my $i = $item->prop('Interface') || next;
        if (!defined($ndb->get($i))) {
            $item->delete();
        }
    }

    # Disable rules using deleted objects
    foreach my $item ($rdb->get_all()) {
        foreach my $p (qw(Src Dst)) {
            my $v = $item->prop($p);
            # Check for non-existing zones
            if ($v =~ /^zone;(.*)$/) {
                if(!defined($ndb->get($1))) {
                    $item->set_prop('status', 'disabled');
                }
            }
            # Check for non-existing roles
            if ($v =~ /^role;(.*)$/) {
                if(scalar($ndb->get_all_by_prop('role', $1)) <= 0) {
                    $item->set_prop('status', 'disabled');
                }
            }
        }
    }
}
