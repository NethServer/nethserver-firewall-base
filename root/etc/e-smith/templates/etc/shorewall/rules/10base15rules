#
# 10base15rules
#
{
    use NethServer::Firewall;

    my $fw = new NethServer::Firewall();
    foreach my $rule ( $fw->getRules() ) {
        my $status = $rule->prop("status") || "disabled";
        my $state = $rule->prop("State") || "new";
        next unless ($status eq 'enabled');
        next if ($state ne "all");
 
        my $src = $rule->prop("Src") || next; 
        my $dst = $rule->prop("Dst") || next;
        my $action = $rule->prop("Action") || next;
        $action = uc($action);

        my $service = $rule->prop("Service") || 'any';
        $service = '-' if ($service eq '' || $service eq 'any');
        my $log = $rule->prop('Log') || "";
        my $time =  $fw->getTime( $rule->prop('Time') || "" );
        $time = '-' if ($time eq '');

        # skip ndpi rules
        # ndpi rules will be generated only in established section
        next if ($fw->isNdpiService($service));

        my $description = "RULE#" . $rule->key . " " . ($rule->prop('Description') || '');

        # src and dst can be: IP address, host, host-group, zone
        my $src_addr = $fw->getAddress($src);
        my $dst_addr = $fw->getAddress($dst);
        $action .= ":$log" unless ($log eq '');

        # Replace empty values with "-", for column count consistency:
	    $src_addr = $src_addr eq '' ? '-' : $src_addr;
	    $dst_addr = $dst_addr eq '' ? '-' : $dst_addr;

        my $params = {
            'action' => $action,
            'source' => $fw->getZone($src_addr),
            'dest' => $fw->getZone($dst_addr),
            'comment' => $description,
            'time' => $time,
            'service' => $service
        };

        $OUT .= $fw->outRule($params);
    }
}
